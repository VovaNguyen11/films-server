{"ast":null,"code":"var _jsxFileName = \"/Users/vovanguyen/Desktop/bt/films_server/client/src/components/App.js\";\nimport React, { Component } from \"react\";\nimport TopNavigation from \"./TopNavigation\";\nimport HomePage from \"./HomePage\";\nFi;\nexport class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      films: [],\n      showAddForm: false,\n      selectedFilm: {},\n      isLoading: true\n    };\n\n    this.sortFilms = films => _orderBy(films, [\"featured\", \"title\"], [\"desc\", \"asc\"]);\n\n    this.toggleFeatured = id => e => {\n      const film = _find(this.state.films, {\n        _id: id\n      });\n\n      this.updateFilm({ ...film,\n        featured: !film.featured\n      });\n    };\n\n    this.saveFilm = film => film._id === null ? this.addFilm(film) : this.updateFilm(film);\n\n    this.addFilm = filmData => api.films.create(filmData).then(film => this.setState(({\n      films\n    }) => ({\n      films: this.sortFilms([...films, film]),\n      showAddForm: false\n    })));\n\n    this.updateFilm = filmData => api.films.update(filmData).then(film => this.setState(({\n      films\n    }) => ({\n      films: this.sortFilms(films.map(f => f._id === film._id ? film : f)),\n      showAddForm: false\n    })));\n\n    this.showForm = () => this.setState({\n      showAddForm: true,\n      selectedFilm: {}\n    });\n\n    this.hideForm = () => this.setState({\n      showAddForm: false,\n      selectedFilm: {}\n    });\n\n    this.selectFilmForEdit = selectedFilm => () => this.setState({\n      selectedFilm,\n      showAddForm: true\n    });\n\n    this.deleteFilm = film => e => api.films.delete(film).then(() => {\n      this.setState(({\n        films\n      }) => ({\n        films: this.sortFilms(films.filter(f => f._id !== film._id))\n      }));\n      this.hideForm();\n    });\n  }\n\n  componentDidMount() {\n    api.films.fetchAll().then(films => this.setState({\n      films: this.sortFilms(films),\n      isLoading: false\n    }));\n  }\n\n  render() {\n    const {\n      films,\n      showAddForm,\n      selectedFilm,\n      isLoading\n    } = this.state;\n    const cols = showAddForm ? \"ten\" : \"sixteen\";\n    return React.createElement(FilmContext.Provider, {\n      value: {\n        toggleFeatured: this.toggleFeatured,\n        selectFilmForEdit: this.selectFilmForEdit,\n        deleteFilm: this.deleteFilm\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ui container pt-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(TopNavigation, {\n      showForm: this.showForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"ui stackable grid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, showAddForm && React.createElement(\"div\", {\n      className: \"six wide column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(FilmForm, {\n      hideForm: this.hideForm,\n      saveFilm: this.saveFilm,\n      film: selectedFilm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    })), isLoading ? React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      className: `${cols} wide column`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(FilmsList, {\n      films: films,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    })))));\n  }\n\n}\nexport default App;","map":{"version":3,"sources":["/Users/vovanguyen/Desktop/bt/films_server/client/src/components/App.js"],"names":["React","Component","TopNavigation","HomePage","Fi","App","state","films","showAddForm","selectedFilm","isLoading","sortFilms","_orderBy","toggleFeatured","id","e","film","_find","_id","updateFilm","featured","saveFilm","addFilm","filmData","api","create","then","setState","update","map","f","showForm","hideForm","selectFilmForEdit","deleteFilm","delete","filter","componentDidMount","fetchAll","render","cols"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\"\nimport TopNavigation from \"./TopNavigation\"\nimport HomePage from \"./HomePage\"\n\nFi\n\nexport class App extends Component {\n  state = {\n    films: [],\n    showAddForm: false,\n    selectedFilm: {},\n    isLoading: true,\n  }\n\n  componentDidMount() {\n    api.films.fetchAll().then(films =>\n      this.setState({\n        films: this.sortFilms(films),\n        isLoading: false,\n      }),\n    )\n  }\n\n  sortFilms = films => _orderBy(films, [\"featured\", \"title\"], [\"desc\", \"asc\"])\n\n  toggleFeatured = id => e => {\n    const film = _find(this.state.films, {_id: id})\n    this.updateFilm({...film, featured: !film.featured})\n  }\n\n  saveFilm = film =>\n    film._id === null ? this.addFilm(film) : this.updateFilm(film)\n\n  addFilm = filmData =>\n    api.films.create(filmData).then(film =>\n      this.setState(({films}) => ({\n        films: this.sortFilms([...films, film]),\n        showAddForm: false,\n      })),\n    )\n\n  updateFilm = filmData =>\n    api.films.update(filmData).then(film =>\n      this.setState(({films}) => ({\n        films: this.sortFilms(films.map(f => (f._id === film._id ? film : f))),\n        showAddForm: false,\n      })),\n    )\n\n  showForm = () => this.setState({showAddForm: true, selectedFilm: {}})\n\n  hideForm = () => this.setState({showAddForm: false, selectedFilm: {}})\n\n  selectFilmForEdit = selectedFilm => () =>\n    this.setState({\n      selectedFilm,\n      showAddForm: true,\n    })\n\n  deleteFilm = film => e =>\n    api.films.delete(film).then(() => {\n      this.setState(({films}) => ({\n        films: this.sortFilms(films.filter(f => f._id !== film._id)),\n      }))\n      this.hideForm()\n    })\n\n  render() {\n    const {films, showAddForm, selectedFilm, isLoading} = this.state\n    const cols = showAddForm ? \"ten\" : \"sixteen\"\n    return (\n      <FilmContext.Provider\n        value={{\n          toggleFeatured: this.toggleFeatured,\n          selectFilmForEdit: this.selectFilmForEdit,\n          deleteFilm: this.deleteFilm,\n        }}\n      >\n        <div className=\"ui container pt-3\">\n          <TopNavigation showForm={this.showForm} />\n\n          <div className=\"ui stackable grid\">\n            {showAddForm && (\n              <div className=\"six wide column\">\n                <FilmForm\n                  hideForm={this.hideForm}\n                  saveFilm={this.saveFilm}\n                  film={selectedFilm}\n                />\n              </div>\n            )}\n            {isLoading ? (\n              <Spinner />\n            ) : (\n              <div className={`${cols} wide column`}>\n                <FilmsList films={films} />\n              </div>\n            )}\n          </div>\n        </div>\n      </FilmContext.Provider>\n    )\n  }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}