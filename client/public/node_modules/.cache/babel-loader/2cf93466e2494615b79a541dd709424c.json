{"ast":null,"code":"var _jsxFileName = \"/Users/vovanguyen/Desktop/bt/films_server/client/src/components/FilmsPage.js\";\nimport React, { Component } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport _orderBy from \"lodash/orderBy\";\nimport _find from \"lodash/find\";\nimport FilmsList from \"./films\";\nimport FilmForm from \"./forms/FilmForm\";\nimport FilmContext from \"./context/FilmContext\";\nimport api from \"../api\";\nimport Spinner from \"./spinner/Spinner\";\nexport class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      films: [],\n      selectedFilm: {},\n      isLoading: true\n    };\n\n    this.sortFilms = films => _orderBy(films, [\"featured\", \"title\"], [\"desc\", \"asc\"]);\n\n    this.toggleFeatured = id => e => {\n      const film = _find(this.state.films, {\n        _id: id\n      });\n\n      this.updateFilm({ ...film,\n        featured: !film.featured\n      });\n    };\n\n    this.saveFilm = film => film._id === null ? this.addFilm(film) : this.updateFilm(film);\n\n    this.addFilm = filmData => api.films.create(filmData).then(film => this.setState(({\n      films\n    }) => ({\n      films: this.sortFilms([...films, film])\n    })));\n\n    this.updateFilm = filmData => api.films.update(filmData).then(film => this.setState(({\n      films\n    }) => ({\n      films: this.sortFilms(films.map(f => f._id === film._id ? film : f))\n    })));\n\n    this.selectFilmForEdit = selectedFilm => () => this.setState({\n      selectedFilm\n    });\n\n    this.deleteFilm = film => e => api.films.delete(film).then(() => {\n      this.setState(({\n        films\n      }) => ({\n        films: this.sortFilms(films.filter(f => f._id !== film._id))\n      }));\n      this.hideForm();\n    });\n  }\n\n  componentDidMount() {\n    api.films.fetchAll().then(films => this.setState({\n      films: this.sortFilms(films),\n      isLoading: false\n    }));\n  }\n\n  render() {\n    const {\n      films,\n      selectedFilm,\n      isLoading\n    } = this.state;\n    const cols = this.props.location.pathname === \"/films\" ? \"sixteen\" : \"ten\";\n    return React.createElement(FilmContext.Provider, {\n      value: {\n        toggleFeatured: this.toggleFeatured,\n        selectFilmForEdit: this.selectFilmForEdit,\n        deleteFilm: this.deleteFilm\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ui stackable grid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"six wide column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(FilmForm, {\n      film: selectedFilm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    })), isLoading ? React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      className: `${cols} wide column`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(FilmsList, {\n      films: films,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }))));\n  }\n\n}\nexport default App;","map":{"version":3,"sources":["/Users/vovanguyen/Desktop/bt/films_server/client/src/components/FilmsPage.js"],"names":["React","Component","Route","_orderBy","_find","FilmsList","FilmForm","FilmContext","api","Spinner","App","state","films","selectedFilm","isLoading","sortFilms","toggleFeatured","id","e","film","_id","updateFilm","featured","saveFilm","addFilm","filmData","create","then","setState","update","map","f","selectFilmForEdit","deleteFilm","delete","filter","hideForm","componentDidMount","fetchAll","render","cols","props","location","pathname"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\"\nimport {Route} from \"react-router-dom\"\nimport _orderBy from \"lodash/orderBy\"\nimport _find from \"lodash/find\"\nimport FilmsList from \"./films\"\nimport FilmForm from \"./forms/FilmForm\"\nimport FilmContext from \"./context/FilmContext\"\nimport api from \"../api\"\nimport Spinner from \"./spinner/Spinner\"\n\nexport class App extends Component {\n  state = {\n    films: [],\n    selectedFilm: {},\n    isLoading: true,\n  }\n\n  componentDidMount() {\n    api.films.fetchAll().then(films =>\n      this.setState({\n        films: this.sortFilms(films),\n        isLoading: false,\n      }),\n    )\n  }\n\n  sortFilms = films => _orderBy(films, [\"featured\", \"title\"], [\"desc\", \"asc\"])\n\n  toggleFeatured = id => e => {\n    const film = _find(this.state.films, {_id: id})\n    this.updateFilm({...film, featured: !film.featured})\n  }\n\n  saveFilm = film =>\n    film._id === null ? this.addFilm(film) : this.updateFilm(film)\n\n  addFilm = filmData =>\n    api.films.create(filmData).then(film =>\n      this.setState(({films}) => ({\n        films: this.sortFilms([...films, film]),\n      })),\n    )\n\n  updateFilm = filmData =>\n    api.films.update(filmData).then(film =>\n      this.setState(({films}) => ({\n        films: this.sortFilms(films.map(f => (f._id === film._id ? film : f))),\n      })),\n    )\n\n  selectFilmForEdit = selectedFilm => () =>\n    this.setState({\n      selectedFilm,\n    })\n\n  deleteFilm = film => e =>\n    api.films.delete(film).then(() => {\n      this.setState(({films}) => ({\n        films: this.sortFilms(films.filter(f => f._id !== film._id)),\n      }))\n      this.hideForm()\n    })\n\n  render() {\n    const {films, selectedFilm, isLoading} = this.state\n    const cols = this.props.location.pathname === \"/films\" ? \"sixteen\" : \"ten\"\n    return (\n      <FilmContext.Provider\n        value={{\n          toggleFeatured: this.toggleFeatured,\n          selectFilmForEdit: this.selectFilmForEdit,\n          deleteFilm: this.deleteFilm,\n        }}\n      >\n        <div className=\"ui stackable grid\">\n          <div className=\"six wide column\">\n            <FilmForm film={selectedFilm} />\n          </div>\n\n          {isLoading ? (\n            <Spinner />\n          ) : (\n            <div className={`${cols} wide column`}>\n              <FilmsList films={films} />\n            </div>\n          )}\n        </div>\n      </FilmContext.Provider>\n    )\n  }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}