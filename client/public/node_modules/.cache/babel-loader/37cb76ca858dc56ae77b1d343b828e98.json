{"ast":null,"code":"var _jsxFileName = \"/Users/vovanguyen/Desktop/bt/films_server/client/src/components/FilmsPage.js\";\nimport React, { Component } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport _orderBy from \"lodash/orderBy\";\nimport _find from \"lodash/find\";\nimport FilmsList from \"./films\";\nimport FilmForm from \"./forms/FilmForm\";\nimport FilmContext from \"./context/FilmContext\";\nimport api from \"../api\";\nimport Spinner from \"./spinner/Spinner\";\nexport class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      films: [],\n      isLoading: true\n    };\n\n    this.sortFilms = films => _orderBy(films, [\"featured\", \"title\"], [\"desc\", \"asc\"]);\n\n    this.toggleFeatured = id => e => {\n      const film = _find(this.state.films, {\n        _id: id\n      });\n\n      this.updateFilm({ ...film,\n        featured: !film.featured\n      });\n    };\n\n    this.saveFilm = film => {\n      return film._id === null ? this.addFilm(film) : this.updateFilm(film).then(props => props.history);\n    };\n\n    this.addFilm = filmData => api.films.create(filmData).then(film => this.setState(({\n      films\n    }) => ({\n      films: this.sortFilms([...films, film])\n    })));\n\n    this.updateFilm = filmData => api.films.update(filmData).then(film => this.setState(({\n      films\n    }) => ({\n      films: this.sortFilms(films.map(f => f._id === film._id ? film : f))\n    })));\n\n    this.deleteFilm = film => e => api.films.delete(film).then(() => {\n      this.setState(({\n        films\n      }) => ({\n        films: this.sortFilms(films.filter(f => f._id !== film._id))\n      }));\n      this.hideForm();\n    });\n  }\n\n  componentDidMount() {\n    api.films.fetchAll().then(films => this.setState({\n      films: this.sortFilms(films),\n      isLoading: false\n    }));\n  }\n\n  render() {\n    const {\n      films,\n      isLoading\n    } = this.state;\n    const cols = this.props.location.pathname === \"/films\" ? \"sixteen\" : \"ten\";\n    return React.createElement(FilmContext.Provider, {\n      value: {\n        toggleFeatured: this.toggleFeatured,\n        deleteFilm: this.deleteFilm\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ui stackable grid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/films/new\",\n      render: () => React.createElement(\"div\", {\n        className: \"six wide column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(FilmForm, {\n        saveFilm: this.saveFilm,\n        film: {},\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/films/edit/:_id\",\n      render: props => React.createElement(\"div\", {\n        className: \"six wide column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(FilmForm, {\n        saveFilm: this.saveFilm,\n        film: _find(films, {\n          _id: props.match.params._id\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), isLoading ? React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      className: `${cols} wide column`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(FilmsList, {\n      films: films,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }))));\n  }\n\n}\nexport default App;","map":{"version":3,"sources":["/Users/vovanguyen/Desktop/bt/films_server/client/src/components/FilmsPage.js"],"names":["React","Component","Route","_orderBy","_find","FilmsList","FilmForm","FilmContext","api","Spinner","App","state","films","isLoading","sortFilms","toggleFeatured","id","e","film","_id","updateFilm","featured","saveFilm","addFilm","then","props","history","filmData","create","setState","update","map","f","deleteFilm","delete","filter","hideForm","componentDidMount","fetchAll","render","cols","location","pathname","match","params"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\"\nimport {Route} from \"react-router-dom\"\nimport _orderBy from \"lodash/orderBy\"\nimport _find from \"lodash/find\"\nimport FilmsList from \"./films\"\nimport FilmForm from \"./forms/FilmForm\"\nimport FilmContext from \"./context/FilmContext\"\nimport api from \"../api\"\nimport Spinner from \"./spinner/Spinner\"\n\nexport class App extends Component {\n  state = {\n    films: [],\n    isLoading: true,\n  }\n\n  componentDidMount() {\n    api.films.fetchAll().then(films =>\n      this.setState({\n        films: this.sortFilms(films),\n        isLoading: false,\n      }),\n    )\n  }\n\n  sortFilms = films => _orderBy(films, [\"featured\", \"title\"], [\"desc\", \"asc\"])\n\n  toggleFeatured = id => e => {\n    const film = _find(this.state.films, {_id: id})\n    this.updateFilm({...film, featured: !film.featured})\n  }\n\n  saveFilm = film => {\n    return film._id === null ? this.addFilm(film) : this.updateFilm(film).then((props)=>props.history)\n  }\n\n  addFilm = filmData =>\n    api.films.create(filmData).then(film =>\n      this.setState(({films}) => ({\n        films: this.sortFilms([...films, film]),\n      })),\n    )\n\n  updateFilm = filmData =>\n    api.films.update(filmData).then(film =>\n      this.setState(({films}) => ({\n        films: this.sortFilms(films.map(f => (f._id === film._id ? film : f))),\n      })),\n    )\n\n  deleteFilm = film => e =>\n    api.films.delete(film).then(() => {\n      this.setState(({films}) => ({\n        films: this.sortFilms(films.filter(f => f._id !== film._id)),\n      }))\n      this.hideForm()\n    })\n\n  render() {\n    const {films, isLoading} = this.state\n    const cols = this.props.location.pathname === \"/films\" ? \"sixteen\" : \"ten\"\n    return (\n      <FilmContext.Provider\n        value={{\n          toggleFeatured: this.toggleFeatured,\n          deleteFilm: this.deleteFilm,\n        }}\n      >\n        <div className=\"ui stackable grid\">\n          <Route\n            path=\"/films/new\"\n            render={() => (\n              <div className=\"six wide column\">\n                <FilmForm saveFilm={this.saveFilm} film={{}} />\n              </div>\n            )}\n          />\n\n          <Route\n            path=\"/films/edit/:_id\"\n            render={props => (\n              <div className=\"six wide column\">\n                <FilmForm\n                  saveFilm={this.saveFilm}\n                  film={_find(films, {_id: props.match.params._id})}\n                />\n              </div>\n            )}\n          />\n\n          {isLoading ? (\n            <Spinner />\n          ) : (\n            <div className={`${cols} wide column`}>\n              <FilmsList films={films} />\n            </div>\n          )}\n        </div>\n      </FilmContext.Provider>\n    )\n  }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}