{"ast":null,"code":"var _jsxFileName = \"/Users/vovanguyen/Desktop/bt/films_server/client/src/components/App.js\";\nimport React, { Component } from \"react\";\nimport _orderBy from \"lodash/orderBy\";\nimport FilmsList from \"./films\";\nimport FilmForm from \"./forms/FilmForm\";\nimport TopNavigation from \"./TopNavigation\";\nimport FilmContext from \"./context/FilmContext\";\nimport api from \"../api\";\nexport class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      films: [],\n      showAddForm: false,\n      selectedFilm: {}\n    };\n\n    this.sortFilms = films => _orderBy(films, [\"featured\", \"title\"], [\"desc\", \"asc\"]);\n\n    this.toggleFeatured = id => e => this.state.films.map(film => film._id === id ? api.films.update({ ...film,\n      featured: !film.featured\n    }).then() : film);\n\n    this.saveFilm = film => film._id === null ? this.addFilm(film) : this.updateFilm(film);\n\n    this.addFilm = filmData => api.films.create(filmData).then(film => this.setState(({\n      films\n    }) => ({\n      films: this.sortFilms([...films, film]),\n      showAddForm: false\n    })));\n\n    this.updateFilm = filmData => api.films.update(filmData).then(film => this.setState(({\n      films\n    }) => ({\n      films: this.sortFilms(films.map(f => f._id === film._id ? film : f)),\n      showAddForm: false\n    })));\n\n    this.showForm = () => this.setState({\n      showAddForm: true,\n      selectedFilm: {}\n    });\n\n    this.hideForm = () => this.setState({\n      showAddForm: false,\n      selectedFilm: {}\n    });\n\n    this.selectFilmForEdit = selectedFilm => () => this.setState({\n      selectedFilm,\n      showAddForm: true\n    });\n\n    this.deleteFilm = film => e => this.setState(({\n      films,\n      selectedFilm,\n      showAddForm\n    }) => ({\n      films: this.sortFilms(films.filter(f => f._id !== film._id)),\n      selectedFilm: {},\n      showAddForm: false\n    }));\n  }\n\n  componentDidMount() {\n    api.films.fetchAll().then(films => this.setState({\n      films: this.sortFilms(films)\n    }));\n  }\n\n  render() {\n    const {\n      films,\n      showAddForm,\n      selectedFilm\n    } = this.state;\n    const cols = showAddForm ? \"ten\" : \"sixteen\";\n    return React.createElement(FilmContext.Provider, {\n      value: {\n        toggleFeatured: this.toggleFeatured,\n        selectFilmForEdit: this.selectFilmForEdit,\n        deleteFilm: this.deleteFilm\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ui container pt-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(TopNavigation, {\n      showForm: this.showForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"ui stackable grid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, showAddForm && React.createElement(\"div\", {\n      className: \"six wide column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(FilmForm, {\n      hideForm: this.hideForm,\n      saveFilm: this.saveFilm,\n      film: selectedFilm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: `${cols} wide column`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(FilmsList, {\n      films: films,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    })))));\n  }\n\n}\nexport default App;","map":{"version":3,"sources":["/Users/vovanguyen/Desktop/bt/films_server/client/src/components/App.js"],"names":["React","Component","_orderBy","FilmsList","FilmForm","TopNavigation","FilmContext","api","App","state","films","showAddForm","selectedFilm","sortFilms","toggleFeatured","id","e","map","film","_id","update","featured","then","saveFilm","addFilm","updateFilm","filmData","create","setState","f","showForm","hideForm","selectFilmForEdit","deleteFilm","filter","componentDidMount","fetchAll","render","cols"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\"\nimport _orderBy from \"lodash/orderBy\"\nimport FilmsList from \"./films\"\nimport FilmForm from \"./forms/FilmForm\"\nimport TopNavigation from \"./TopNavigation\"\nimport FilmContext from \"./context/FilmContext\"\nimport api from \"../api\"\n\nexport class App extends Component {\n  state = {\n    films: [],\n    showAddForm: false,\n    selectedFilm: {},\n  }\n\n  componentDidMount() {\n    api.films.fetchAll().then(films =>\n      this.setState({\n        films: this.sortFilms(films),\n      }),\n    )\n  }\n\n  sortFilms = films => _orderBy(films, [\"featured\", \"title\"], [\"desc\", \"asc\"])\n\n  toggleFeatured = id => e =>\n    this.state.films.map(film =>\n      film._id === id ? \n      api.films.update({...film, featured: !film.featured}).then()\n      : film,\n    )\n  // this.setState(({films}) => ({\n  //   films: this.sortFilms(\n  //     films.map(film => {\n  //       return film._id === id ? {...film, featured: !film.featured} : film\n  //     }),\n  //   ),\n  // }))\n\n  saveFilm = film =>\n    film._id === null ? this.addFilm(film) : this.updateFilm(film)\n\n  addFilm = filmData =>\n    api.films.create(filmData).then(film =>\n      this.setState(({films}) => ({\n        films: this.sortFilms([...films, film]),\n        showAddForm: false,\n      })),\n    )\n\n  updateFilm = filmData =>\n    api.films.update(filmData).then(film =>\n      this.setState(({films}) => ({\n        films: this.sortFilms(films.map(f => (f._id === film._id ? film : f))),\n        showAddForm: false,\n      })),\n    )\n\n  showForm = () => this.setState({showAddForm: true, selectedFilm: {}})\n\n  hideForm = () => this.setState({showAddForm: false, selectedFilm: {}})\n\n  selectFilmForEdit = selectedFilm => () =>\n    this.setState({\n      selectedFilm,\n      showAddForm: true,\n    })\n\n  deleteFilm = film => e =>\n    this.setState(({films, selectedFilm, showAddForm}) => ({\n      films: this.sortFilms(films.filter(f => f._id !== film._id)),\n      selectedFilm: {},\n      showAddForm: false,\n    }))\n\n  render() {\n    const {films, showAddForm, selectedFilm} = this.state\n    const cols = showAddForm ? \"ten\" : \"sixteen\"\n    return (\n      <FilmContext.Provider\n        value={{\n          toggleFeatured: this.toggleFeatured,\n          selectFilmForEdit: this.selectFilmForEdit,\n          deleteFilm: this.deleteFilm,\n        }}\n      >\n        <div className=\"ui container pt-3\">\n          <TopNavigation showForm={this.showForm} />\n\n          <div className=\"ui stackable grid\">\n            {showAddForm && (\n              <div className=\"six wide column\">\n                <FilmForm\n                  hideForm={this.hideForm}\n                  saveFilm={this.saveFilm}\n                  film={selectedFilm}\n                />\n              </div>\n            )}\n\n            <div className={`${cols} wide column`}>\n              <FilmsList films={films} />\n            </div>\n          </div>\n        </div>\n      </FilmContext.Provider>\n    )\n  }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}