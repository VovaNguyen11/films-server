{"ast":null,"code":"var _jsxFileName = \"/Users/vovanguyen/Desktop/bt/films_server/client/src/components/forms/RegistrationForm.js\";\nimport React from \"react\";\nimport FormMessage from \"./FormMessage\";\nimport { Link } from \"react-router-dom\";\nconst initialData = {\n  email: \"\",\n  password: \"\",\n  passwordConfirm: \"\"\n};\n\nclass RegistrationForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: initialData,\n      errors: {},\n      isLoading: false\n    };\n\n    this.handleTextInputChange = ({\n      target\n    }) => this.setState({\n      data: { ...this.state.data,\n        [target.name]: target.value\n      },\n      errors: { ...this.state.errors,\n        [target.name]: \"\"\n      }\n    });\n\n    this.validate = ({\n      email,\n      password,\n      passwordConfirm\n    }) => {\n      const errors = {};\n      if (!email) errors.email = \"Email field is required\";\n      if (!password && password.length < 6) errors.password = \"Password must contain at least 6 character\";\n      if (passwordConfirm !== password || !passwordConfirm.length) errors.passwordConfirm = \"The password do not match\";\n      return errors;\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const {\n        data\n      } = this.state;\n      const errors = this.validate(data);\n      this.setState({\n        errors\n      });\n\n      if (Object.keys(errors).length === 0) {\n        this.setState({\n          isLoading: true\n        });\n        this.props.submit(data).catch(err => this.setState({\n          errors: err.response.data.errors,\n          isLoading: false\n        }));\n      }\n    };\n  }\n\n  render() {\n    const {\n      data,\n      errors,\n      isLoading\n    } = this.state;\n    const loadClass = isLoading ? \"loading\" : \"\";\n    return React.createElement(\"div\", {\n      className: \"ui container grid center aligned\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: `ui form eight wide column ${loadClass}`,\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"ui center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Register Now\"), React.createElement(\"div\", {\n      className: errors.email ? \"error field\" : \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Email\"), React.createElement(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      placeholder: \"E-mail address\",\n      value: data.email,\n      onChange: this.handleTextInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(FormMessage, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, errors.email)), React.createElement(\"div\", {\n      className: errors.password ? \"error field\" : \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      placeholder: \"Password\",\n      value: data.password,\n      onChange: this.handleTextInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(FormMessage, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, errors.password)), React.createElement(\"div\", {\n      className: errors.passwordConfirm ? \"error field\" : \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Password Confirm\"), React.createElement(\"input\", {\n      type: \"password\",\n      name: \"passwordConfirm\",\n      placeholder: \"Password Confirm\",\n      value: data.passwordConfirm,\n      onChange: this.handleTextInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(FormMessage, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, errors.passwordConfirm)), React.createElement(\"div\", {\n      className: \"small ui fluid buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"ui green button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"OK\"), React.createElement(Link, {\n      to: \"/\",\n      className: \"ui red button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"CANCEL\"))));\n  }\n\n}\n\nexport default RegistrationForm;","map":{"version":3,"sources":["/Users/vovanguyen/Desktop/bt/films_server/client/src/components/forms/RegistrationForm.js"],"names":["React","FormMessage","Link","initialData","email","password","passwordConfirm","RegistrationForm","Component","state","data","errors","isLoading","handleTextInputChange","target","setState","name","value","validate","length","handleSubmit","e","preventDefault","Object","keys","props","submit","catch","err","response","render","loadClass"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,MAAMC,WAAW,GAAG;AAClBC,EAAAA,KAAK,EAAE,EADW;AAElBC,EAAAA,QAAQ,EAAE,EAFQ;AAGlBC,EAAAA,eAAe,EAAE;AAHC,CAApB;;AAMA,MAAMC,gBAAN,SAA+BP,KAAK,CAACQ,SAArC,CAA+C;AAAA;AAAA;AAAA,SAC7CC,KAD6C,GACrC;AACNC,MAAAA,IAAI,EAAEP,WADA;AAENQ,MAAAA,MAAM,EAAE,EAFF;AAGNC,MAAAA,SAAS,EAAE;AAHL,KADqC;;AAAA,SAM7CC,qBAN6C,GAMrB,CAAC;AAACC,MAAAA;AAAD,KAAD,KACtB,KAAKC,QAAL,CAAc;AACZL,MAAAA,IAAI,EAAE,EAAC,GAAG,KAAKD,KAAL,CAAWC,IAAf;AAAqB,SAACI,MAAM,CAACE,IAAR,GAAeF,MAAM,CAACG;AAA3C,OADM;AAEZN,MAAAA,MAAM,EAAE,EAAC,GAAG,KAAKF,KAAL,CAAWE,MAAf;AAAuB,SAACG,MAAM,CAACE,IAAR,GAAe;AAAtC;AAFI,KAAd,CAP2C;;AAAA,SAY7CE,QAZ6C,GAYlC,CAAC;AAACd,MAAAA,KAAD;AAAQC,MAAAA,QAAR;AAAkBC,MAAAA;AAAlB,KAAD,KAAwC;AACjD,YAAMK,MAAM,GAAG,EAAf;AAEA,UAAI,CAACP,KAAL,EAAYO,MAAM,CAACP,KAAP,GAAe,yBAAf;AACZ,UAAI,CAACC,QAAD,IAAaA,QAAQ,CAACc,MAAT,GAAkB,CAAnC,EACER,MAAM,CAACN,QAAP,GAAkB,4CAAlB;AAEF,UAAIC,eAAe,KAAKD,QAApB,IAAgC,CAACC,eAAe,CAACa,MAArD,EACER,MAAM,CAACL,eAAP,GAAyB,2BAAzB;AAEF,aAAOK,MAAP;AACD,KAvB4C;;AAAA,SAyB7CS,YAzB6C,GAyB9BC,CAAC,IAAI;AAClBA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAM;AAACZ,QAAAA;AAAD,UAAS,KAAKD,KAApB;AACA,YAAME,MAAM,GAAG,KAAKO,QAAL,CAAcR,IAAd,CAAf;AACA,WAAKK,QAAL,CAAc;AAACJ,QAAAA;AAAD,OAAd;;AAEA,UAAIY,MAAM,CAACC,IAAP,CAAYb,MAAZ,EAAoBQ,MAApB,KAA+B,CAAnC,EAAsC;AACpC,aAAKJ,QAAL,CAAc;AAACH,UAAAA,SAAS,EAAE;AAAZ,SAAd;AACA,aAAKa,KAAL,CACGC,MADH,CACUhB,IADV,EAEGiB,KAFH,CAESC,GAAG,IACR,KAAKb,QAAL,CAAc;AAACJ,UAAAA,MAAM,EAAEiB,GAAG,CAACC,QAAJ,CAAanB,IAAb,CAAkBC,MAA3B;AAAmCC,UAAAA,SAAS,EAAE;AAA9C,SAAd,CAHJ;AAKD;AACF,KAvC4C;AAAA;;AAyC7CkB,EAAAA,MAAM,GAAG;AACP,UAAM;AAACpB,MAAAA,IAAD;AAAOC,MAAAA,MAAP;AAAeC,MAAAA;AAAf,QAA4B,KAAKH,KAAvC;AACA,UAAMsB,SAAS,GAAGnB,SAAS,GAAG,SAAH,GAAe,EAA1C;AACA,WACE;AAAK,MAAA,SAAS,EAAC,kCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,SAAS,EAAG,6BAA4BmB,SAAU,EADpD;AAEE,MAAA,QAAQ,EAAE,KAAKX,YAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJF,EAKE;AAAK,MAAA,SAAS,EAAET,MAAM,CAACP,KAAP,GAAe,aAAf,GAA+B,OAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,WAAW,EAAC,gBAHd;AAIE,MAAA,KAAK,EAAEM,IAAI,CAACN,KAJd;AAKE,MAAA,QAAQ,EAAE,KAAKS,qBALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EASE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAcF,MAAM,CAACP,KAArB,CATF,CALF,EAiBE;AAAK,MAAA,SAAS,EAAEO,MAAM,CAACN,QAAP,GAAkB,aAAlB,GAAkC,OAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,WAAW,EAAC,UAHd;AAIE,MAAA,KAAK,EAAEK,IAAI,CAACL,QAJd;AAKE,MAAA,QAAQ,EAAE,KAAKQ,qBALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EASE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAcF,MAAM,CAACN,QAArB,CATF,CAjBF,EA4BE;AAAK,MAAA,SAAS,EAAEM,MAAM,CAACL,eAAP,GAAyB,aAAzB,GAAyC,OAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEE;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,IAAI,EAAC,iBAFP;AAGE,MAAA,WAAW,EAAC,kBAHd;AAIE,MAAA,KAAK,EAAEI,IAAI,CAACJ,eAJd;AAKE,MAAA,QAAQ,EAAE,KAAKO,qBALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EASE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAcF,MAAM,CAACL,eAArB,CATF,CA5BF,EAuCE;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,GAAT;AAAa,MAAA,SAAS,EAAC,eAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CAvCF,CADF,CADF;AAkDD;;AA9F4C;;AAiG/C,eAAeC,gBAAf","sourcesContent":["import React from \"react\"\nimport FormMessage from \"./FormMessage\"\nimport {Link} from \"react-router-dom\"\nconst initialData = {\n  email: \"\",\n  password: \"\",\n  passwordConfirm: \"\",\n}\n\nclass RegistrationForm extends React.Component {\n  state = {\n    data: initialData,\n    errors: {},\n    isLoading: false,\n  }\n  handleTextInputChange = ({target}) =>\n    this.setState({\n      data: {...this.state.data, [target.name]: target.value},\n      errors: {...this.state.errors, [target.name]: \"\"},\n    })\n\n  validate = ({email, password, passwordConfirm}) => {\n    const errors = {}\n\n    if (!email) errors.email = \"Email field is required\"\n    if (!password && password.length < 6)\n      errors.password = \"Password must contain at least 6 character\"\n\n    if (passwordConfirm !== password || !passwordConfirm.length)\n      errors.passwordConfirm = \"The password do not match\"\n\n    return errors\n  }\n\n  handleSubmit = e => {\n    e.preventDefault()\n    const {data} = this.state\n    const errors = this.validate(data)\n    this.setState({errors})\n\n    if (Object.keys(errors).length === 0) {\n      this.setState({isLoading: true})\n      this.props\n        .submit(data)\n        .catch(err =>\n          this.setState({errors: err.response.data.errors, isLoading: false}),\n        )\n    }\n  }\n\n  render() {\n    const {data, errors, isLoading} = this.state\n    const loadClass = isLoading ? \"loading\" : \"\"\n    return (\n      <div className=\"ui container grid center aligned\">\n        <form\n          className={`ui form eight wide column ${loadClass}`}\n          onSubmit={this.handleSubmit}\n        >\n          <h1 className=\"ui center\">Register Now</h1>\n          <div className={errors.email ? \"error field\" : \"field\"}>\n            <label>Email</label>\n            <input\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"E-mail address\"\n              value={data.email}\n              onChange={this.handleTextInputChange}\n            />\n            <FormMessage>{errors.email}</FormMessage>\n          </div>\n\n          <div className={errors.password ? \"error field\" : \"field\"}>\n            <label>Password</label>\n            <input\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Password\"\n              value={data.password}\n              onChange={this.handleTextInputChange}\n            />\n            <FormMessage>{errors.password}</FormMessage>\n          </div>\n          <div className={errors.passwordConfirm ? \"error field\" : \"field\"}>\n            <label>Password Confirm</label>\n            <input\n              type=\"password\"\n              name=\"passwordConfirm\"\n              placeholder=\"Password Confirm\"\n              value={data.passwordConfirm}\n              onChange={this.handleTextInputChange}\n            />\n            <FormMessage>{errors.passwordConfirm}</FormMessage>\n          </div>\n          <div className=\"small ui fluid buttons\">\n            <button className=\"ui green button\">OK</button>\n            <Link to=\"/\" className=\"ui red button\">\n              CANCEL\n            </Link>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default RegistrationForm\n"]},"metadata":{},"sourceType":"module"}