{"ast":null,"code":"var _jsxFileName = \"/Users/vovanguyen/Desktop/bt/films_server/client/src/components/films/FilmCard.js\";\nimport React, { useState, useContext } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Featured from \"./Featured\";\nimport FilmContext from \"../context/FilmContext\";\n\nconst FilmCard = ({\n  film\n}) => {\n  const [confirm, setConfirm] = useState(false);\n\n  const showConfirm = () => setConfirm(true);\n\n  const hideConfirm = () => setConfirm(false);\n\n  const {\n    selectFilmForEdit,\n    deleteFilm\n  } = useContext(FilmContext);\n  return React.createElement(\"div\", {\n    className: \"ui card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"ui right corner label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"empty star icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"image\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"ui green label ribbon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"$ \", film.price, \" \"), React.createElement(Featured, {\n    featured: film.featured,\n    id: film._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), React.createElement(\"img\", {\n    src: film.img,\n    alt: film.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, film.title), React.createElement(\"div\", {\n    className: \"meta\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"icon users\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), \" \", film.director, React.createElement(\"span\", {\n    className: \"right floated\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"icon wait right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), \" \", film.duration, \" min\"))), React.createElement(\"div\", {\n    className: \"extra content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"ui two buttons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, confirm ? React.createElement(React.Fragment, null, React.createElement(\"span\", {\n    className: \"ui red basic button\",\n    onClick: deleteFilm(film),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"ui icon check\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), \"YES\"), React.createElement(\"span\", {\n    className: \"ui grey basic button\",\n    onClick: hideConfirm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"ui icon close\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), \" NO\")) : React.createElement(React.Fragment, null, React.createElement(\"span\", {\n    className: \"ui green basic button\",\n    onClick: selectFilmForEdit(film),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"ui icon edit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  })), React.createElement(\"span\", {\n    className: \"ui red basic button\",\n    onClick: showConfirm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"ui icon trash\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }))))));\n};\n\nFilmCard.propTypes = {\n  film: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    img: PropTypes.string.isRequired,\n    director: PropTypes.string.isRequired,\n    description: PropTypes.string,\n    price: PropTypes.number.isRequired,\n    duration: PropTypes.number.isRequired,\n    featured: PropTypes.bool.isRequired\n  }).isRequired\n};\nexport default React.memo(FilmCard);","map":{"version":3,"sources":["/Users/vovanguyen/Desktop/bt/films_server/client/src/components/films/FilmCard.js"],"names":["React","useState","useContext","PropTypes","Featured","FilmContext","FilmCard","film","confirm","setConfirm","showConfirm","hideConfirm","selectFilmForEdit","deleteFilm","price","featured","_id","img","title","director","duration","propTypes","shape","string","isRequired","description","number","bool","memo"],"mappings":"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","sourcesContent":["import React, {useState, useContext} from \"react\"\nimport PropTypes from \"prop-types\"\nimport Featured from \"./Featured\"\nimport FilmContext from \"../context/FilmContext\"\n\nconst FilmCard = ({film}) => {\n  const [confirm, setConfirm] = useState(false)\n  const showConfirm = () => setConfirm(true)\n  const hideConfirm = () => setConfirm(false)\n\n  const {selectFilmForEdit, deleteFilm} = useContext(FilmContext)\n  return (\n    <div className=\"ui card\">\n      <span className=\"ui right corner label\">\n        <i className=\"empty star icon\"></i>\n      </span>\n      <div className=\"image\">\n        <span className=\"ui green label ribbon\">$ {film.price} </span>\n\n        <Featured featured={film.featured} id={film._id} />\n\n        <img src={film.img} alt={film.title} />\n      </div>\n\n      <div className=\"content\">\n        <span className=\"header\">{film.title}</span>\n        <div className=\"meta\">\n          <i className=\"icon users\"></i> {film.director}\n          <span className=\"right floated\">\n            <i className=\"icon wait right\"></i> {film.duration} min\n          </span>\n        </div>\n      </div>\n\n      <div className=\"extra content\">\n        <div className=\"ui two buttons\">\n          {confirm ? (\n            <>\n              <span className=\"ui red basic button\" onClick={deleteFilm(film)}>\n                <i className=\"ui icon check\" />\n                YES\n              </span>\n              <span className=\"ui grey basic button\" onClick={hideConfirm}>\n                <i className=\"ui icon close\" /> NO\n              </span>\n            </>\n          ) : (\n            <>\n              <span\n                className=\"ui green basic button\"\n                onClick={selectFilmForEdit(film)}\n              >\n                <i className=\"ui icon edit\"></i>\n              </span>\n              <span className=\"ui red basic button\" onClick={showConfirm}>\n                <i className=\"ui icon trash\"></i>\n              </span>\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nFilmCard.propTypes = {\n  film: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    img: PropTypes.string.isRequired,\n    director: PropTypes.string.isRequired,\n    description: PropTypes.string,\n    price: PropTypes.number.isRequired,\n    duration: PropTypes.number.isRequired,\n    featured: PropTypes.bool.isRequired,\n  }).isRequired,\n}\n\nexport default React.memo(FilmCard)\n"]},"metadata":{},"sourceType":"module"}